export const json = {
  pages: [
    {
      name: "page1",
      elements: [
        {
          type: "html",
          name: "stackoverflow_question",
          html: '<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Stack Overflow Style Page</title>\n    <!-- Tailwind CSS CDN for styling -->\n    <script src="https://cdn.tailwindcss.com"></script>\n    <!-- Google Fonts - Inter for a modern look -->\n    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">\n    <style>\n        /* Apply Inter font to the entire body */\n        body {\n            font-family: \'Inter\', sans-serif;\n        }\n        /* Custom styles to mimic Stack Overflow\'s appearance */\n        .so-container {\n            max-width: 960px; /* Max width for content */\n            margin: 2rem auto; /* Center the container with vertical margin */\n            background-color: #fff; /* White background */\n            border-radius: 0.5rem; /* Rounded corners */\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); /* Subtle shadow */\n            padding: 2rem; /* Inner padding */\n        }\n        .so-question-title {\n            font-size: 1.875rem; /* Large font size for question title */\n            font-weight: 700; /* Bold font weight */\n            margin-bottom: 1rem; /* Space below title */\n        }\n        .so-question-body {\n            font-size: 1rem; /* Standard text size */\n            line-height: 1.6; /* Comfortable line height */\n            color: #374151; /* Dark gray text */\n            margin-bottom: 1.5rem; /* Space below question body */\n        }\n        .so-tag {\n            display: inline-block; /* Allows tags to sit next to each other */\n            background-color: #E1ECF4; /* Light blue background for tags */\n            color: #39739D; /* Darker blue text for tags */\n            padding: 0.25rem 0.6rem; /* Padding inside tags */\n            border-radius: 0.25rem; /* Rounded corners for tags */\n            font-size: 0.75rem; /* Smaller font for tags */\n            margin-right: 0.5rem; /* Space between tags */\n            margin-bottom: 0.5rem; /* Space below tags */\n        }\n        .so-answer {\n            display: flex; /* Flexbox for vote column and answer body */\n            margin-top: 2rem; /* Space above each answer */\n            padding-top: 1.5rem; /* Padding above answer content */\n            border-top: 1px solid #E5E7EB; /* Top border to separate answers */\n        }\n        .so-vote-column {\n            display: flex;\n            flex-direction: column; /* Stack vote buttons and count vertically */\n            align-items: center; /* Center items horizontally */\n            margin-right: 1.5rem; /* Space between vote column and answer body */\n            color: #6B7280; /* Gray color for vote icons */\n        }\n        .so-vote-count {\n            font-size: 1.5rem; /* Large font for vote count */\n            font-weight: 600; /* Semi-bold font */\n            color: #1F2937; /* Dark text for vote count */\n            margin-top: 0.5rem; /* Space above vote count */\n            margin-bottom: 0.5rem; /* Space below vote count */\n        }\n        .so-answer-body {\n            flex-grow: 1; /* Allows answer body to take remaining space */\n            font-size: 1rem;\n            line-height: 1.6;\n            color: #374151;\n        }\n        .so-user-info {\n            font-size: 0.875rem; /* Smaller font for user info */\n            color: #6B7280; /* Gray text for user info */\n            text-align: right; /* Align user info to the right */\n            margin-top: 1rem; /* Space above user info */\n        }\n        .so-user-name {\n            color: #39739D; /* Blue color for username */\n            font-weight: 600; /* Semi-bold font for username */\n        }\n    </style>\n</head>\n<body class="bg-gray-100 p-4">\n    <div class="so-container">\n        <!-- Stack Overflow Question Section -->\n        <div class="so-question">\n            <h1 class="so-question-title">How do I undo the most recent local commits in Git?</h1>\n            <div class="so-question-body">\n                <p>I\'ve made a few commits locally in my Git repository, but I\'ve realized they contain errors or shouldn\'t have been committed yet. I need to undo these commits, but I want to keep the changes in my working directory so I can fix them and re-commit.</p>\n                <p>What\'s the safest and most efficient way to undo the last N commits while preserving the changes, or completely discarding them if necessary? I\'m looking for clear explanations of different methods and their implications.</p>\n            </div>\n            <div class="mb-6">\n                <span class="so-tag">git</span>\n                <span class="so-tag">version-control</span>\n                <span class="so-tag">undo</span>\n                <span class="so-tag">commit</span>\n                <span class="so-tag">reset</span>\n            </div>\n            <div class="so-user-info">\n                asked <span class="font-semibold">5 days ago</span> by <span class="so-user-name">GitNewbie</span>\n            </div>\n        </div>\n\n        <!-- Stack Overflow Answers Section Header -->\n        <h2 class="text-2xl font-bold mt-8 mb-4 border-b pb-2">2 Answers</h2>\n\n        <!-- Response A Section -->\n        <div class="so-answer">\n            <div class="so-vote-column">\n                <!-- Upvote SVG icon -->\n                <svg class="w-6 h-6 text-gray-500 hover:text-blue-500 cursor-pointer" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 17a.75.75 0 01-.75-.75V5.612L5.29 9.79a.75.75 0 11-1.08-1.04l5.25-5.5a.75.75 0 011.08 0l5.25 5.5a.75.75 0 11-1.08 1.04l-3.96-4.178V16.25c0 .414-.336.75-.75.75z" clip-rule="evenodd"></path></svg>\n                <span class="so-vote-count">25</span>\n                <!-- Downvote SVG icon -->\n                <svg class="w-6 h-6 text-gray-500 hover:text-blue-500 cursor-pointer" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 3a.75.75 0 01.75.75v10.638l3.96-4.178a.75.75 0 111.08 1.04l-5.25 5.5a.75.75 0 01-1.08 0l-5.25-5.5a.75.75 0 111.08-1.04l3.96 4.178V3.75A.75.75 0 0110 3z" clip-rule="evenodd"></path></svg>\n            </div>\n            <div class="so-answer-body">\n                <h3 class="font-semibold text-lg mb-2">Response A: Using `git reset` for Local Commit Undoing</h3>\n                <p class="mb-4">The most common way to undo local commits is using <code>git reset</code>. This command moves your branch pointer to an earlier commit. There are three main modes:</p>\n                <ul class="list-disc list-inside mb-4 pl-4">\n                    <li><code>git reset --soft HEAD~N</code>: Un-commits the last N commits but leaves all changes in your staging area (index). This is useful if you want to re-commit them with different messages or combine them.</li>\n                    <li><code>git reset --mixed HEAD~N</code> (default): Un-commits the last N commits and moves the changes to your working directory. This is ideal if you want to fix the changes and then re-add and re-commit them.</li>\n                    <li><code>git reset --hard HEAD~N</code>: Un-commits the last N commits and discards all changes. Use this with extreme caution as it permanently deletes uncommitted changes and commits from your history.</li>\n                </ul>\n                <p>For your scenario (keeping changes to fix them), <code>git reset --mixed HEAD~N</code> is usually the best choice. Replace <code>N</code> with the number of commits you want to undo.</p>\n                <p><strong>Pros:</strong> Flexible control over changes, common for local cleanup, can rewrite history. <br><strong>Cons:</strong> Can lose work if `--hard` is used carelessly, rewrites history (dangerous if pushed).</p>\n                <div class="so-user-info">\n                    answered <span class="font-semibold">4 days ago</span> by <span class="so-user-name">GitGuru</span>\n                </div>\n            </div>\n        </div>\n\n        <!-- Response B Section -->\n        <div class="so-answer">\n            <div class="so-vote-column">\n                <!-- Upvote SVG icon -->\n                <svg class="w-6 h-6 text-gray-500 hover:text-blue-500 cursor-pointer" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 17a.75.75 0 01-.75-.75V5.612L5.29 9.79a.75.75 0 11-1.08-1.04l5.25-5.5a.75.75 0 011.08 0l5.25 5.5a.75.75 0 11-1.08 1.04l-3.96-4.178V16.25c0 .414-.336.75-.75.75z" clip-rule="evenodd"></path></svg>\n                <span class="so-vote-count">12</span>\n                <!-- Downvote SVG icon -->\n                <svg class="w-6 h-6 text-gray-500 hover:text-blue-500 cursor-pointer" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 3a.75.75 0 01.75.75v10.638l3.96-4.178a.75.75 0 111.08 1.04l-5.25 5.5a.75.75 0 01-1.08 0l-5.25-5.5a.75.75 0 111.08-1.04l3.96 4.178V3.75A.75.75 0 0110 3z" clip-rule="evenodd"></path></svg>\n            </div>\n            <div class="so-answer-body">\n                <h3 class="font-semibold text-lg mb-2">Response B: Using `git revert` for a Safer Undo (New Commits)</h3>\n                <p class="mb-4">If you need to undo commits, especially if they\'ve already been pushed to a shared remote repository, <code>git revert</code> is a safer alternative to <code>git reset</code>. Instead of rewriting history, <code>git revert</code> creates new commits that undo the changes introduced by the specified commits.</p>\n                <p class="mb-4">For example, <code>git revert HEAD</code> will create a new commit that undoes the changes from your last commit. If you want to revert multiple commits, you can specify a range, e.g., <code>git revert HEAD~2..HEAD</code> to revert the last two commits.</p>\n                <p>The main advantage is that it doesn\'t rewrite history, making it safe for shared branches. It\'s less suitable if you simply want to clean up local mistakes before pushing.</p>\n                <p><strong>Pros:</strong> Does not rewrite history (safe for shared repos), preserves commit history, creates new "undo" commits. <br><strong>Cons:</strong> Creates additional commits, less suitable for purely local cleanup.</p>\n                <div class="so-user-info">\n                    answered <span class="font-semibold">3 days ago</span> by <span class="so-user-name">VersionControlPro</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n</html>\n',
        },
        {
          type: "radiogroup",
          name: "q_understanding",
          title:
            "Based on the content above, how well do you understand how to undo Git commits?",
          choices: [
            "Not at all",
            "Slightly",
            "Moderately",
            "Very well",
            "Completely",
          ],
        },
        {
          type: "comment",
          name: "q_feedback",
          title:
            "Do you have any feedback on the clarity or helpfulness of the provided answers?",
        },
      ],
    },
  ],
};
